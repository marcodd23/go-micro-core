name: on PR

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - synchronize
      - edited
      - reopened

concurrency:
  group: versioning
  cancel-in-progress: false

permissions:
  contents: write
  deployments: write
  id-token: write
  pull-requests: write
  repository-projects: write


jobs:
  pr-title-linting:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: $(${{ github.event.pull_request.commits }} + 1)

      - uses: thehanimo/pr-title-checker@v1.4.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          configuration_path: .github/pr-title-checker-config.json

  check-feature:
    name: "check-feature"
    uses: ./.github/workflows/check_feature.yaml
    secrets: inherit
    with:
      pull_request_commits: ${{ github.event.pull_request.commits }}
      pull_request_head_sha: ${{ github.event.pull_request.head.sha }}
      pull_request_base_sha: ${{ github.event.pull_request.base.sha }}


  tag_feature:
    name: "Alpha Tag"
    needs: check-feature
    if: ${{ github.event.pull_request.merged == false && github.event.pull_request.user.login != 'dependabot[bot]'}}
    runs-on: ubuntu-latest
    concurrency:
      group: tag-feature-group
      cancel-in-progress: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Bump Alpha version
        id: bump_alpha_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
          INITIAL_VERSION: 0.0.0
          RELEASE_BRANCHES: master
          DEFAULT_BRANCH: master
          PRERELEASE_SUFFIX: alpha
          PRERELEASE: true
          BRANCH_HISTORY: compare
          DRY_RUN: false
          VERBOSE: true

      # Setting the Build Version
      - name: Set Alpha version environment
        run: |
          echo "ALPHA_VERSION=${{ steps.bump_alpha_version.outputs.new_tag }}" >> $GITHUB_ENV
          echo "ALPHA version ${{ env.ALPHA_VERSION }}"


  # ======================================================================
  # TASK TO AUTOMATICALLY APPROVE AND MERGE DEPENDABOT PR
  # "dependabot-approve-pr" needs to depend on check-feature
  # ======================================================================
#  dependabot-approve-pr:
#    name: Approve Dependabot PR
#    runs-on: ubuntu-latest
#    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
#    needs: [check-feature]
#    steps:
#      - name: Dependabot metadata
#        id: metadata
#        uses: dependabot/fetch-metadata@v2
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Auto-approve Dependabot PR
#        run: gh pr review --approve "$PR_URL"
#        env:
#          PR_URL: ${{github.event.pull_request.html_url}}
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

#  dependabot-merge-pr:
#    name: Merge Dependabot PR
#    runs-on: ubuntu-latest
#    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
#    needs: [dependabot-approve-pr]
#    steps:
#      - name: Dependabot metadata
#        id: metadata
#        uses: dependabot/fetch-metadata@v2
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Auto-merge Dependabot PR
#        run: gh pr merge --auto --squash "$PR_URL"
#        env:
#          PR_URL: ${{github.event.pull_request.html_url}}
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
#
#      - name: Merge Conflict Notification
#        run: |
#          while ! (gh pr view "${PR_URL}" --json state | grep -q "MERGED") && \
#          (gh pr view "${PR_URL}" --json mergeable | grep -q "UNKNOWN"); do
#            echo "Merge status of ${PR_URL} unknown."
#            sleep 5s
#          done
#
#          if gh pr view "${PR_URL}" --json mergeable | grep -q "CONFLICTING"; then
#            curl -X POST -H 'Content-type: application/json' \
#              --data "{\"text\":\"This Dependabot PR contains conflicts with master and cannot be merged automatically:\n  ${PR_URL}\nPlease, review the pull request and resolve the conflicts manually.\"}" \
#              ${{secrets.PR_SUPERVISOR_WEBHOOK}}
#          fi
#        env:
#          PR_URL: ${{github.event.pull_request.html_url}}
#          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}