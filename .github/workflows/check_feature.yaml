name: check feature
concurrency:
  group: check-and-alpha-tag
  cancel-in-progress: false

on:
  workflow_call:
    inputs:
      pull_request_commits:
        required: true
        type: number
      pull_request_head_sha:
        required: true
        type: string
      pull_request_base_sha:
        required: true
        type: string

env:
  TESTCONTAINERS_RYUK_DISABLED: true
permissions:
  contents: write
  id-token: write
  pull-requests: write
  repository-projects: write

jobs:
  checking-changed-files:
    runs-on: ubuntu-latest
    outputs:
      gha_files_changed: ${{ steps.files_changed_step.outputs.gha_files_changed }}
      go_files_changed: ${{ steps.files_changed_step.outputs.go_files_changed }}
      makefile_changed: ${{ steps.files_changed_step.outputs.makefile_changed }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: $(${{ inputs.pull_request_commits }} + 1)
          ref: ${{ inputs.pull_request_head_sha }}
          fetch-tags: false
      #          fetch-depth: $(${{ github.event.pull_request.commits }} + 1)

      - name: set output variables
        id: files_changed_step
        env:
          PR_BASE_SHA: ${{ inputs.pull_request_base_sha }}
          #          PR_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          PR_HEAD_SHA: ${{ inputs.pull_request_head_sha }}
        #          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          files_changed=$(git diff --name-only "$PR_BASE_SHA" "$PR_HEAD_SHA")
          
          {
            echo "dockerfile_changed=false"
            echo "gha_files_changed=false"
            echo "go_files_changed=false"
            echo "makefile_changed=false"
            echo "terraform_files_changed=false"
          } >> "$GITHUB_OUTPUT"
          
          if (grep -q ".github/workflows/" <<< "$files_changed") then
            echo "gha_files_changed=true" >> "$GITHUB_OUTPUT"
          fi
          
          if (grep -q "go.mod\|go.sum\|.*.go" <<< "$files_changed") then
            echo "go_files_changed=true" >> "$GITHUB_OUTPUT"
          fi
          
          if (grep -q "Makefile" <<< "$files_changed") then
            echo "makefile_changed=true" >> "$GITHUB_OUTPUT"
          fi
          

  go-tests:
    runs-on: ubuntu-latest
    needs: checking-changed-files
    if: needs.checking-changed-files.outputs.go_files_changed == 'true'
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: $(${{ inputs.pull_request_commits }} + 1)
          ref: ${{ inputs.pull_request_head_sha }}
          fetch-tags: false

      #################################
      ## Go Caching
      #################################

      - name: Set Weekly Cache Key
        id: set-weekly-cache-key
        run: echo "WEEKLY_CACHE_KEY=$(date +%Y-%V)" >> $GITHUB_ENV

      - name: Cache Go build
        id: cache-go-build
        uses: actions/cache@v4
        with:
          path: /home/runner/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/*.go', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Cache Go modules
        id: cache-go-mod
        uses: actions/cache@v4
        with:
          path: /home/runner/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          cache: true
          check-latest: true
          go-version-file: 'go.mod'


      #################################
      ## Build and Test
      #################################

      - name: Build
        run: make build
        env:
          GOMODCACHE: /home/runner/go/pkg/mod
          GOCACHE: /home/runner/.cache/go-build

      - name: Test
        run: make test
        env:
          GOMODCACHE: /home/runner/go/pkg/mod
          GOCACHE: /home/runner/.cache/go-build